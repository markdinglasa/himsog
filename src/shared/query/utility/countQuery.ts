export enum CountQuery {
  q001 = "SELECT s.`Name` AS `Name`, COUNT(p.`SubscriptionId`) AS `NameCount` FROM `payment` AS p INNER JOIN `subscription` AS s ON s.`Id` = p.`SubscriptionId` GROUP BY s.`Name`", // ADMIN - MOST SUBSCRIBE SUBSCRIPTION
  q002 = "SELECT MONTH(p.`DateCreated`) AS `Name`, SUM(s.`Price`) AS `NameCount` FROM `payment` AS p JOIN `subscription` AS s ON p.`SubscriptionId` = s.`Id` WHERE YEAR(p.`DateCreated`) = YEAR(NOW()) GROUP BY MONTH(p.`DateCreated`), MONTHNAME(p.`DateCreated`) ORDER BY MONTH(p.`DateCreated`) ASC", // ADMIN-MONTH REVENUE BY SUBSCRIPTION
  q003 = "WITH MonthlyRevenue AS (SELECT MONTH(p.`TransactionDate`) AS `Month`, MONTHNAME(p.`TransactionDate`) AS `MonthName`, SUM(s.`Price`) AS `Revenue` FROM `payment` AS p LEFT JOIN `subscription` AS s ON s.`Id` = p.`SubscriptionId` WHERE p.`IsSubscription` = true AND YEAR(p.`TransactionDate`) = ? GROUP BY MONTH(p.`TransactionDate`), MONTHNAME(p.`TransactionDate`)) SELECT current.`Month`, current.`MonthName`, current.`Revenue`, LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) AS `PreviousMonthRevenue`, CASE WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) IS NULL THEN NULL WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) = 0 THEN NULL ELSE ROUND(((current.`Revenue` - LAG(current.`Revenue`) OVER (ORDER BY current.`Month`)) / LAG(current.`Revenue`) OVER (ORDER BY current.`Month`)) * 100, 2) END AS `PercentageChange` FROM MonthlyRevenue current ORDER BY current.`Month` DESC;",
  q004 = "WITH DailyRevenue AS (SELECT DAY(p.`TransactionDate`) AS `Day`, DAYNAME(p.`TransactionDate`) AS `DayName`, SUM(s.`Price`) AS `Revenue` FROM `payment` AS p LEFT JOIN `subscription` AS s ON s.`Id` = p.`SubscriptionId` WHERE p.`IsSubscription` = true AND DAY(p.`TransactionDate`) = DAY(NOW()) GROUP BY DAY(p.`TransactionDate`), DAYNAME(p.`TransactionDate`)) SELECT current.`Day`, current.`DayName`, current.`Revenue`, LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) AS `PreviousDayRevenue`, CASE WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) IS NULL THEN NULL WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) = 0 THEN NULL ELSE ROUND(((current.`Revenue` - LAG(current.`Revenue`) OVER (ORDER BY current.`Day`)) / LAG(current.`Revenue`) OVER (ORDER BY current.`Day`)) * 100, 2) END AS `PercentageChange` FROM DailyRevenue current ORDER BY current.`Day` DESC;",
  q005 = "WITH MonthlyRevenue AS (SELECT MONTH(p.`TransactionDate`) AS `Month`, MONTHNAME(p.`TransactionDate`) AS `MonthName`, SUM(mp.`Price`) AS `Revenue` FROM `payment` AS p LEFT JOIN `meal_plan` AS mp ON mp.`Id` = p.`MealPlanId` WHERE mp.`UserId`= ? AND p.`IsMealPlan` = true AND YEAR(p.`TransactionDate`) = YEAR(NOW()) GROUP BY MONTH(p.`TransactionDate`), MONTHNAME(p.`TransactionDate`)) SELECT current.`Month`, current.`MonthName`, current.`Revenue`, LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) AS `PreviousMonthRevenue`, CASE WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) IS NULL THEN NULL WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Month`) = 0 THEN NULL ELSE ROUND(((current.`Revenue` - LAG(current.`Revenue`) OVER (ORDER BY current.`Month`)) / LAG(current.`Revenue`) OVER (ORDER BY current.`Month`)) * 100, 2) END AS `PercentageChange` FROM MonthlyRevenue current ORDER BY current.`Month` DESC;",
  q006 = "WITH DailyRevenue AS (SELECT DAY(p.`TransactionDate`) AS `Day`, DAYNAME(p.`TransactionDate`) AS `DayName`, SUM(mp.`Price`) AS `Revenue` FROM `payment` AS p LEFT JOIN `meal_plan` AS mp ON mp.`Id` = p.`MealPlanId` WHERE mp.`UserId` = ? AND p.`IsMealPlan` = true AND DAY(p.`TransactionDate`) = DAY(NOW()) GROUP BY DAY(p.`TransactionDate`), DAYNAME(p.`TransactionDate`)) SELECT current.`Day`, current.`DayName`, current.`Revenue`, LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) AS `PreviousDayRevenue`, CASE WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) IS NULL THEN NULL WHEN LAG(current.`Revenue`) OVER (ORDER BY current.`Day`) = 0 THEN NULL ELSE ROUND(((current.`Revenue` - LAG(current.`Revenue`) OVER (ORDER BY current.`Day`)) / LAG(current.`Revenue`) OVER (ORDER BY current.`Day`)) * 100, 2) END AS `PercentageChange` FROM DailyRevenue current ORDER BY current.`Day` DESC;",
  q007 = "SELECT MONTH(u.`DateCreated`) AS `Month`, MONTHNAME(u.`DateCreated`) AS `MonthName`, COUNT(CASE WHEN u.`Role` = 'advocate' THEN 1 ELSE null END) AS `Advocates`, COUNT (CASE WHEN u.`Role` = 'nutritionist' THEN 1 ELSE null END) AS `Professionals` FROM `user` AS u WHERE YEAR(u.`DateCreated`) = ? GROUP BY MONTH(u.`DateCreated`), MONTHNAME(u.`DateCreated`)", // ADMIN- USER REPORTS
  q008 = "",
  q009 = "",
  q010 = "",
}
